// Code generated by protoc-gen-go.
// source: singularity.proto
// DO NOT EDIT!

package singularity

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Command struct {
	Command          []byte   `protobuf:"bytes,1,req,name=command" json:"command,omitempty"`
	Args             [][]byte `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *Command) Reset()         { *this = Command{} }
func (this *Command) String() string { return proto.CompactTextString(this) }
func (*Command) ProtoMessage()       {}

func (this *Command) GetCommand() []byte {
	if this != nil {
		return this.Command
	}
	return nil
}

type StillAlive struct {
	XXX_unrecognized []byte `json:"-"`
}

func (this *StillAlive) Reset()         { *this = StillAlive{} }
func (this *StillAlive) String() string { return proto.CompactTextString(this) }
func (*StillAlive) ProtoMessage()       {}

type CommandFinished struct {
	ExitCode         *int32 `protobuf:"varint,1,req,name=exit_code" json:"exit_code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *CommandFinished) Reset()         { *this = CommandFinished{} }
func (this *CommandFinished) String() string { return proto.CompactTextString(this) }
func (*CommandFinished) ProtoMessage()       {}

func (this *CommandFinished) GetExitCode() int32 {
	if this != nil && this.ExitCode != nil {
		return *this.ExitCode
	}
	return 0
}

type CommandOutput struct {
	Stdout           []byte `protobuf:"bytes,1,opt,name=stdout" json:"stdout,omitempty"`
	Stderr           []byte `protobuf:"bytes,2,opt,name=stderr" json:"stderr,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *CommandOutput) Reset()         { *this = CommandOutput{} }
func (this *CommandOutput) String() string { return proto.CompactTextString(this) }
func (*CommandOutput) ProtoMessage()       {}

func (this *CommandOutput) GetStdout() []byte {
	if this != nil {
		return this.Stdout
	}
	return nil
}

func (this *CommandOutput) GetStderr() []byte {
	if this != nil {
		return this.Stderr
	}
	return nil
}

func init() {
}
